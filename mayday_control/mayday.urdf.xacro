<?xml version="1.0"?>
<robot name="mayday" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="robotname" value="mayday" />

  <xacro:property name="width" value="0.2" />
  <xacro:property name="leglen" value="0.6" />
  <xacro:property name="polelen" value="0.2" />
  <xacro:property name="bodylen" value="0.6" />
  <xacro:property name="baselen" value="0.4" />
  <xacro:property name="wheeldiam" value="0.07" />
  <xacro:property name="tau" value="${pi*2}" />

  <xacro:property name="tolerance" value="0.001" />

  <xacro:property name="dynamixel_x" value="0.0465" />
  <xacro:property name="dynamixel_y" value="0.0285" />
  <xacro:property name="dynamixel_z" value="0.034" />
  <xacro:property name="dynamixel_weight" value="0.0572" />


  <xacro:property name="thorax_x" value="0.2" />
  <xacro:property name="thorax_y" value="0.1" />
  <xacro:property name="thorax_z" value="${dynamixel_z - tolerance}" />
  <xacro:property name="thorax_weight" value="0.5" />

  <xacro:property name="coxa_x" value="${dynamixel_x*1.5}" />
  <xacro:property name="coxa_y" value="${dynamixel_y}" />
  <xacro:property name="coxa_z" value="0.005" />
  <xacro:property name="coxa_weight" value="0.005" />

  <xacro:property name="femur_x" value="${dynamixel_x*3}" />
  <xacro:property name="femur_y" value="${dynamixel_y}" />
  <xacro:property name="femur_z" value="0.005" />
  <xacro:property name="femur_weight" value="0.01" />

  <xacro:property name="tibia_x" value="0.2" />
  <xacro:property name="tibia_y" value="${dynamixel_y}" />
  <xacro:property name="tibia_z" value="0.01" />
  <xacro:property name="tibia_weight" value="0.05" />

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="grey">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <!-- box_inertial_macro  -->
  <xacro:macro name="box_inertial" params="mass x y z x_ y_ z_">
    <inertial>
      <origin xyz="${x_} ${y_} ${z_}" rpy="0 0 0"/>
      <mass value="${mass}" />
      <inertia ixx="${mass*(1/12)*(y*y + z*z)}" ixy="0.0" ixz="0.0" iyy="${mass*(1/12)*(x*x + z*z)}" iyz="0.0"
        izz="${mass*(1/12)*(x*x + y*y)}" />
    </inertial>
  </xacro:macro>

  <!-- dynamixel_macro  -->
  <xacro:macro name="dynamixel" params="prefix">
    <link name="${prefix}_dynamixel">
      <visual>
        <geometry>
          <box size="${dynamixel_x} ${dynamixel_y} ${dynamixel_z}"/>
        </geometry>
        <origin xyz="${-dynamixel_x/2+dynamixel_y/2} 0 0" rpy="0 0 0"/>
        <material name="black"/>
      </visual>
      <collision>
        <geometry>
          <box size="${dynamixel_x} ${dynamixel_y} ${dynamixel_z}"/>
        </geometry>
        <origin xyz="${-dynamixel_x/2 + dynamixel_y/2} 0 0" rpy="0 0 0"/>
      </collision>
      <xacro:box_inertial mass="${dynamixel_weight}" x="${dynamixel_x}" y="${dynamixel_y}" z="${dynamixel_z}"
                          x_="${-dynamixel_x/2 + dynamixel_y/2}" y_="0" z_="0" />
    </link>
  </xacro:macro>

  <link name="base_link">
  </link>


  <!-- thorax  -->
  <link name="thorax">
    <visual>
      <geometry>
        <box size="${thorax_x} ${thorax_y} ${thorax_z}"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <material name="grey"/>
    </visual>
    <collision>
      <geometry>
        <box size="${thorax_x} ${thorax_y} ${thorax_z}"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </collision>
    <xacro:box_inertial mass="${thorax_weight}" x="${thorax_x}" y="${thorax_y}" z="${thorax_z}"
                        x_="0" y_="0" z_="0" />
  </link>
  <joint name="base_link_to_thorax_joint" type="fixed">
    <parent link="base_link"/>
    <child link="thorax"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <gazebo reference="thorax">
    <mu1 value="0.2"/>
    <mu2 value="0.2"/>
    <kp value="10000000.0" />
    <kd value="1.0" />
    <material>Gazebo/Grey</material>
    <selfCollide>True</selfCollide>
  </gazebo>


  <!-- coxa macro  -->
  <xacro:macro name="coxa" params="prefix">
    <link name="${prefix}_coxa">
      <visual>
        <geometry>
          <box size="${coxa_x} ${coxa_y} ${coxa_z}"/>
        </geometry>
        <origin xyz="${(coxa_x/2-dynamixel_y/2)} 0 0" rpy="0 0 0"/>
        <material name="grey"/>
      </visual>
      <collision>
        <geometry>
          <box size="${coxa_x} ${coxa_y} ${coxa_z}"/>
        </geometry>
        <origin xyz="${coxa_x/2-dynamixel_y/2} 0 0" rpy="0 0 0"/>
      </collision>
      <xacro:box_inertial mass="${coxa_weight}" x="${coxa_x}" y="${coxa_y}" z="${coxa_z}"
                          x_="${coxa_x/2-dynamixel_y/2}" y_="0" z_="0"/>
    </link>
  </xacro:macro>


  <!-- femur macro  -->
  <xacro:macro name="femur" params="prefix">
    <link name="${prefix}_femur">
      <visual>
        <geometry>
          <box size="${femur_x} ${femur_y} ${femur_z}"/>
        </geometry>
        <origin xyz="${femur_x/2-dynamixel_y/2} 0 0" rpy="0 0 0"/>
        <material name="grey"/>
      </visual>
      <collision>
        <geometry>
          <box size="${femur_x} ${femur_y} ${femur_z}"/>
        </geometry>
        <origin xyz="${femur_x/2-dynamixel_y/2} 0 0" rpy="0 0 0"/>
      </collision>
      <xacro:box_inertial mass="${femur_weight}" x="${femur_x}" y="${femur_y}" z="${femur_z}"
                          x_="${femur_x/2-dynamixel_y/2}" y_="0" z_="0"/>
    </link>
  </xacro:macro>


  <xacro:macro name="leg" params="prefix x_offset yaw_offset reflect">

    <!-- coxa_dynamixel  -->
    <xacro:dynamixel prefix="${prefix}_coxa" />
    <joint name="${prefix}_thorax_to_coxa_dynamixel_joint" type="fixed">
      <parent link="thorax"/>
      <child link="${prefix}_coxa_dynamixel"/>
      <origin xyz="${x_offset} ${reflect*thorax_y/2} 0" rpy="0 0 ${reflect*yaw_offset}"/>
    </joint>

    <!-- top_coxa -->
    <xacro:coxa prefix="${prefix}_top" />
    <joint name="${prefix}_coxa_dynamixel_to_top_coxa_joint" type="revolute">
      <axis xyz="0 0 1"/>
      <limit effort="1.5" lower="${-tau*1/8}" upper="${tau*1/8}" velocity="${2*tau}"/>
      <parent link="${prefix}_coxa_dynamixel"/>
      <child link="${prefix}_top_coxa"/>
      <origin xyz="0 0 ${dynamixel_z/2 + coxa_z/2 + tolerance}" rpy="0 0 0" />
      <dynamics damping="0.01" friction="0.1"/>
    </joint>
    <transmission name="${prefix}_coxa_dynamixel_to_top_coxa_joint_transmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_coxa_dynamixel_to_top_coxa_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_coxa_dynamixel_to_top_coxa_joint_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <!-- bottom_coxa  -->
    <xacro:coxa prefix="${prefix}_bottom" />
    <joint name="${prefix}_femur_dynamixel_to_bottom_coxa_joint" type="fixed">
      <parent link="${prefix}_top_coxa"/>
      <child link="${prefix}_bottom_coxa"/>
      <origin xyz="0 0 ${-(dynamixel_z+coxa_z+tolerance*2)}" rpy="${tau/2} 0 0"/>
    </joint>

    <!-- femur_dynamixel  -->
    <xacro:dynamixel prefix="${prefix}_femur" />
    <joint name="${prefix}_top_coxa_to_femur_dynamixel_joint" type="fixed">
      <parent link="${prefix}_top_coxa"/>
      <child link="${prefix}_femur_dynamixel"/>
      <origin xyz="${coxa_x/2 - dynamixel_y/2  +  coxa_x/2 - dynamixel_y/2 + tolerance/2} 0 ${-(dynamixel_x/2 + coxa_z/2)}" rpy="${-tau/4} ${tau/4} 0"/>
    </joint>

    <!-- left_femur -->
    <xacro:femur prefix="${prefix}_left" />
    <joint name="${prefix}_femur_dynamixel_to_left_femur_joint" type="revolute">
      <axis xyz="0 0 1"/>
      <limit effort="1.5" lower="${-tau*3/8}" upper="${tau*3/8}" velocity="${2*tau}"/>
      <parent link="${prefix}_femur_dynamixel"/>
      <child link="${prefix}_left_femur"/>
      <origin xyz="0 0 ${dynamixel_z/2 + femur_z/2 + tolerance}" rpy="0 0 ${-tau/4}" />
      <dynamics damping="0.01" friction="0.1"/>
    </joint>
    <transmission name="${prefix}_femur_dynamixel_to_left_femur_joint_transmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_femur_dynamixel_to_left_femur_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_femur_dynamixel_to_left_femur_joint_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <!-- right_femur  -->
    <xacro:femur prefix="${prefix}_right" />
    <joint name="${prefix}_left_femur_to_right_femur_joint" type="fixed">
      <parent link="${prefix}_left_femur"/>
      <child link="${prefix}_right_femur"/>
      <origin xyz="0 0 ${-(dynamixel_z + femur_z + tolerance*2)}" rpy="${tau/2} 0 0"/>
    </joint>

    <!-- tibia_dynamixel  -->
    <xacro:dynamixel prefix="${prefix}_tibia" />
    <joint name="${prefix}_left_femur_to_tibia_dynamixel_joint" type="revolute">
      <parent link="${prefix}_left_femur"/>
      <child link="${prefix}_tibia_dynamixel"/>
      <origin xyz="${femur_x - dynamixel_y} 0 ${-(dynamixel_z/2 + femur_z/2 + tolerance)}" rpy="${tau/2} ${tau/2} 0" />
      <axis xyz="0 0 1"/>
      <limit effort="1.5" lower="${-tau*3/8}" upper="${tau*3/8}" velocity="${2*tau}"/>
      <dynamics damping="0.01" friction="0.1"/>
    </joint>
    <transmission name="${prefix}_left_femur_to_tibia_dynamixel_joint_transmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_left_femur_to_tibia_dynamixel_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_left_femur_to_tibia_dynamixel_joint_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <!-- tibia -->
    <link name="${prefix}_tibia">
      <visual>
        <geometry>
          <box size="${tibia_x} ${tibia_y} ${tibia_z}"/>
        </geometry>
        <origin xyz="${tibia_x/2 - dynamixel_y/2 + dynamixel_z/2} 0 0" rpy="0 0 0"/>
        <material name="grey"/>
      </visual>
      <collision>
        <geometry>
          <box size="${tibia_x} ${tibia_y} ${tibia_z}"/>
        </geometry>
        <origin xyz="${tibia_x/2 - dynamixel_y/2 + dynamixel_z/2} 0 0" rpy="0 0 0"/>
      </collision>
      <xacro:box_inertial mass="${tibia_weight}" x="${tibia_x}" y="${tibia_y}" z="${tibia_z}"
                          x_="${tibia_x/2 - dynamixel_y/2 + dynamixel_z/2}" y_="0" z_="0"/>
    </link>
    <joint name="${prefix}_tibia_dynamixel_to_tibia_joint" type="fixed">
      <parent link="${prefix}_tibia_dynamixel"/>
      <child link="${prefix}_tibia"/>
      <origin xyz="0 0 0" rpy="${tau/4} 0 ${tau/2}" />
    </joint>

    <!-- This block provides the simulator (Gazebo) with information on a few additional
    physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->

    <gazebo reference="${prefix}_top_coxa">
      <mu1 value="0.2"/>
      <mu2 value="0.2"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
      <selfCollide>True</selfCollide>
    </gazebo>

    <gazebo reference="${prefix}_bottom_coxa">
      <mu1 value="0.2"/>
      <mu2 value="0.2"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
      <selfCollide>True</selfCollide>
    </gazebo>

    <gazebo reference="${prefix}_right_femur">
      <mu1 value="0.2"/>
      <mu2 value="0.2"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
      <selfCollide>True</selfCollide>
    </gazebo>

    <gazebo reference="${prefix}_left_femur">
      <mu1 value="0.2"/>
      <mu2 value="0.2"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
      <selfCollide>True</selfCollide>
    </gazebo>

    <gazebo reference="${prefix}_tibia">
      <mu1 value="0.2"/>
      <mu2 value="0.2"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
      <selfCollide>True</selfCollide>
    </gazebo>

    <gazebo reference="${prefix}_coxa_dynamixel">
      <mu1 value="0.2"/>
      <mu2 value="0.2"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Black</material>
      <selfCollide>True</selfCollide>
    </gazebo>

    <gazebo reference="${prefix}_femur_dynamixel">
      <mu1 value="0.2"/>
      <mu2 value="0.2"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Black</material>
      <selfCollide>True</selfCollide>
    </gazebo>

    <gazebo reference="${prefix}_tibia_dynamixel">
      <mu1 value="0.2"/>
      <mu2 value="0.2"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Black</material>
      <selfCollide>True</selfCollide>
    </gazebo>

  </xacro:macro>


  <!-- legs  -->
  <xacro:leg prefix="right_front"  x_offset="${thorax_x/2}" yaw_offset="${tau*1/8}" reflect="-1" />
  <xacro:leg prefix="right_center" x_offset="0.0"            yaw_offset="${tau*2/8}" reflect="-1" />
  <xacro:leg prefix="right_hind"   x_offset="${-thorax_x/2}" yaw_offset="${tau*3/8}" reflect="-1" />
  <xacro:leg prefix="left_front"   x_offset="${thorax_x/2}"  yaw_offset="${tau*1/8}" reflect="1" />
  <xacro:leg prefix="left_center"  x_offset="0.0"            yaw_offset="${tau*2/8}" reflect="1" />
  <xacro:leg prefix="left_hind"    x_offset="${-thorax_x/2}" yaw_offset="${tau*3/8}" reflect="1" />

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/mayday</robotNamespace>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>
</robot>
